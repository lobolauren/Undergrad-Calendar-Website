# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/


stages:
  - before_script
  - test
  - code_quality
  - code_quality_tests

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install -U -r requirements.txt
  - playwright install
  - playwright install-deps
  - apt-get -y install graphviz
  

test:
  image: mcr.microsoft.com/playwright:focal
  script:
    - cd tests
    - pytest

code_quality:
  allow_failure: true
  script:
    - echo "Linting all the source files"
    - cd .. 
    - pylint ./3760-project/

code_quality_tests:
  allow_failure: true
  script:
    - echo "Linting all the unit tests"
    - cd ./tests/ # navigate to tests folder
    - pylint test_carleton_scraper.py
    - pylint test_scraper.py
    - pylint test_makegraph.py
    - pylint test_suite.py